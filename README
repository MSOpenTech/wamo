Windows Azure Monitor
=====================

Introduction
------------

	Windows Azure Monitor includes utilities to monitor different aspects of Windows
	Azure. These utilities are designed to be used with Nagios and Zabbix, but could
	also be used in other creative ways.

License
-------
	Apache License, Version 2.0
	See COPYING

Installation
------------

	Two ways to install:

	1. Download and extract the source package. Run 'python setup.py install' See 
	   http://docs.python.org/2.7/install/index.html for additional information

	2. Install using pip, 'pip install azuremonitor' Some distributions call pip
	   pip-python.

Dependencies
------------

	* Python 2.6 or 2.7
	* azure - Window Azure sdk for Python
	* argparse - for Python 2.6
	* OpenSSL - pyOpenSSL
	* pyodbc - connect to Azure SQL

Setup
-----

Nagios
______

	1. Create symlinks from your Nagios plugin directory to the Azure monitor utilities.
	   Example::

		ln -s /usr/bin/check_azure_compute.py /usr/lib64/nagios/plugins
		ln -s /usr/bin/check_azure_ad.py /usr/lib64/nagios/plugins
		ln -s /usr/bin/check_azure_sql.py /usr/lib64/nagios/plugins
		ln -s /usr/bin/check_azure_storage.py /usr/lib64/nagios/plugins
		ln -s /usr/bin/check_azure_paas.py /usr/lib64/nagios/plugins

	2. Download your .publishsettings file for your Azure account. Something like:
	   https://windows.azure.com/download/publishprofile.aspx

	3. Move your .publishsetttings file to a safe place and protect it. Example::

	   	mv azure.publishsettings /etc/nagios/private
	   	chmod 640 /etc/nagios/private/azure.publishsettings
	   	chown root:nagios /etc/nagios/private/azure.publishsettings

	   Here only root and the nagios group, which nagios runs under, is allowed to
	   read the file

	4. Optionally set a variable in your resource.cfg (usually /etc/nagios/private/resource.cfg)
	   To point to your publishsettings file

	5. Setup a command in a config file as usual for nagios::

	   	define command{
			command_name    check_azure_compute
			command_line    $USER1$/check_azure_compute.py $HOSTADDRESS$ -p $PSFILE$
		}
		define command{
			command_name    check_azure_sql
			command_line    $USER1$/check_azure_sql.py $HOSTADDRESS$ $ARG1$
		}

		define command{
			command_name    check_azure_ad
			command_line    $USER1$/check_azure_ad.py $HOSTADDRESS$ $ARG1$
		}

		define command{
			command_name    check_azure_paas
			command_line    $USER1$/check_azure_paas.py $HOSTADDRESS$ $ARG1$
		}

		define command{
			command_name    check_azure_storage
			command_line    $USER1$/check_azure_storage.py $HOSTADDRESS$ $ARG1$
		}

	6. In the service file setup appropriate parameters. Examples::
		check_command       check_azure_sql!-d azuredb -u username -p pwd  -k dbsize -vv!
		check_command       check_azure_ad!-c clientid -s secret -k listusers -vv!
        check_command       check_azure_paas!-p psfile -s storageact -k availmemory -w 3000: -c 2000: -vv!
        check_command       check_azure_storage!-p psfile --table --tx  -k percentsuccess -w 99: -c 95:!




Zabbix
______

	1. Use these utilities as an external check: https://www.zabbix.com/documentation/1.8/manual/config/items#external_checks

	2. You may need to increase the timeout for external check in yor zabbix_server.conf::

	       Timeout=10

	3. Also in zabbix_server.conf, uncomment the ExternalScripts location, if commented::

	   	ExternalScripts=/etc/zabbix/externalscripts

	4. Link the utilities to that location. Example::

	   	ln -s /usr/bin/check_azure_compute.py /etc/zabbix/externalscripts

 	5. Download your .publishsettings file for your Azure account. Something like:
	   https://windows.azure.com/download/publishprofile.aspx

	6. Move you .publishsetttings file to a safe place and protect it. Example::

	   	mv azure.publishsettings /etc/zabbix
	   	chmod 640 /etc/zabbix/azure.publishsettings
	   	chown root:zabbix /etc/zabbix/azure.publishsettings

	   Here only root and the zabbix group, which zabbix runs under, is allowed to
	   read the file

	7. Use the zabbix interface to setup the external check. Example::

	       Item
	       External check
	       Key:	check_azure_compute.py[-p /etc/zabbix/azure.publishsettings]
	       Type:	Character

	8. Use the zabbix interface to setup the trigger. Example::

	       Trigger
	       Expression:
	       {<host/template>:check_azure_compute.py[-p /etc/zabbix/azure.publishsettings].str(All cool)}=0

Usage
-----

::

  usage: check_azure_compute.py [-h] -p PSFILE [-v] [--version] hostname

  Check Azure Compute

  positional arguments:
    hostname              hosted service to check

  optional arguments:
    -h, --help            show this help message and exit
    -p PSFILE, --publish-settings PSFILE
                          .publishsettings file to authenticate with azure
    -v, --verbose         verbosity
    --version             show program's version number and exit

  (c) MS Open Tech

usage: check_azure_ad.py [-h] -c CLIENTID -s SECRET [-p PARAM] -k KEY
                         [-t TEMPDIR] [--warn-on-change | --error-on-change]
                         [-v] [--version]
                         domain

Check Azure Active Directory

positional arguments:
  domain                Specify Azure Active Directory domain

optional arguments:
  -h, --help            show this help message and exit
  -c CLIENTID, --clientid CLIENTID
                        Specify Azure AD client id
  -s SECRET, --secret SECRET
                        Specify Azure AD secret used for programmatic access
  -p PARAM, --param PARAM
                        param: user name or group name depending on command
  -k KEY, --key KEY     key - Key used to invoke specific API or get status of
                        Azure AD
  -t TEMPDIR, --tempdir TEMPDIR
                        Temporary directory to save intermediate files
  --warn-on-change      Change in users, groups, or membership to be flagged
                        as warning
  --error-on-change     Change users, groups, or membership to be flagged as
                        error
  -v, --verbose         Verbosity
  --version             show program's version number and exit

(c) MS Open Tech

usage: check_azure_paas.py [-h] -s STORAGEACT -p PSFILE [-f CERT] [-a]
                           [-w WARNING] [-c CRITICAL] [-k KEY] [-v]
                           [--version]
                           cloudservice

Check Azure PAAS Deployments

positional arguments:
  cloudservice          Name of the cloud service to check

optional arguments:
  -h, --help            show this help message and exit
  -s STORAGEACT, --storageact STORAGEACT
                        Azure storage account where service counters are saved
  -p PSFILE, --publish-settings PSFILE
                        .publishsettings file to authenticate with azure
  -f CERT, --certname CERT
                        Cert authentication filename. needed on Windows
  -a, --all             check all hosted cloud services, ignores cloudservice
                        parameter
  -w WARNING, --warning WARNING
                        Specify warning range
  -c CRITICAL, --critical CRITICAL
                        Specify critical range
  -k KEY, --key KEY     Status/Counter to check
  -v, --verbose         verbosity
  --version             show program's version number and exit

(c) MS Open Tech

usage: check_azure_sql.py [-h] -u USER [-p PASSWORD] -d DATABASE [-w WARNING]
                          [-c CRITICAL] -k KEY [-v] [--version]
                          hostname

Check SQL Azure

positional arguments:
  hostname              Azure SQL Server Address to check

optional arguments:
  -h, --help            show this help message and exit
  -u USER, --username USER
                        Specify MSSQL User Name
  -p PASSWORD, --password PASSWORD
                        Specify MSSQL Password
  -d DATABASE, --database DATABASE
                        Specify Azure DB
  -w WARNING, --warning WARNING
                        Specify warning range
  -c CRITICAL, --critical CRITICAL
                        Specify critical range
  -k KEY, --key KEY     Specify key for the DMV or SQL view
  -v, --verbose         verbosity
  --version             show program's version number and exit

(c) MS Open Tech

usage: check_azure_storage.py [-h] -p PSFILE [-f CERT]
                              (--table | --blob | --queue) (--tx | --cap) [-a]
                              [-w WARNING] [-c CRITICAL] [-k KEY] [-v]
                              [--version]
                              storageact

Check Azure Compute

positional arguments:
  storageact            Name of the storage acct name to check

optional arguments:
  -h, --help            show this help message and exit
  -p PSFILE, --publish-settings PSFILE
                        .publishsettings file to authenticate with azure
  -f CERT, --certname CERT
                        cert authentication with azure. needed on Windows
  --table               Check table service
  --blob                Check blob service
  --queue               Check queue service
  --tx                  Check transaction metrics
  --cap                 Check capacity metrics. Applies only to -blob
  -a, --all             Check all storage accounts, ignores storageact
  -w WARNING, --warning WARNING
                        Specify warning range
  -c CRITICAL, --critical CRITICAL
                        Specify critical range
  -k KEY, --key KEY     Status/Counter to check
  -v, --verbose         verbosity
  --version             show program's version number and exit

(c) MS Open Tech

Changelog
---------

0.1
___
Initial Release.

